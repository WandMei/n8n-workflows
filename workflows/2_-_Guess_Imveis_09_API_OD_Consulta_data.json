{"createdAt":"2025-07-17T14:02:27.892Z","updatedAt":"2025-07-17T14:02:46.168Z","id":"4VnY6SkjrX04ufyZ","name":"2 - Guess Imóveis 09. API OD Consulta data","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"dataentrada"},{"name":"datasaida"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[220,0],"id":"3a9a14e4-05c4-471d-bbf4-43200e8d7815","name":"When Executed by Another Workflow"},{"parameters":{"url":"=http://testesapi.guesstecnologia.com.br/api/agendamentosdemand?parametros={{ $json.encodedBase64String }}","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[660,0],"id":"2c0ab36c-511f-4df9-aad1-ac9c0dbad8f1","name":"HTTP Request","credentials":{"httpBasicAuth":{"id":"jNIpg9MjDA7hwALA","name":"API Teste Guess On Demand"}}},{"parameters":{"jsCode":"// O n8n já fornece os itens de entrada no escopo, geralmente como 'items'.\n// Ou você pode acessar o primeiro item diretamente se souber que só vem um.\n\n// Vamos assumir que 'items' já está disponível e contém os dados de entrada\n// Se o seu 'Set' node gerou apenas um item, ele estará em items[0]\nconst currentItem = items[0].json; // Acessa o objeto JSON do primeiro item de entrada\n\n// Assumindo que as datas de entrada (dataentrada, datasaida) vêm no formato \"dd/MM/aaaa\"\nconst dataentrada = currentItem.dataentrada;\nconst datasaida = currentItem.datasaida;  \n\n// 1. Converter as datas para o formato ddmmaaaa (remover as barras)\nconst dataentradaFormatada = dataentrada.replace(/\\//g, ''); // Ex: \"21/08/2025\" -> \"21082025\"\nconst datasaidaFormatada = datasaida.replace(/\\//g, '');   // Ex: \"23/08/2025\" -> \"23082025\"\n\n// 2. Constrói a string no formato desejado: \"ddmmaaaa|ddmmaaaa|||||\"\n//    Usa '|' como delimitador entre as datas e adiciona os múltiplos '|||||' no final.\nconst stringtoEncode = `${dataentradaFormatada}|${datasaidaFormatada}|||||`;\n\n// 3. Codifica a string resultante em Base64\nconst encodedBase64 = Buffer.from(stringtoEncode).toString('base64');\n\n// 4. Adiciona a string codificada em Base64 ao output JSON\nitems[0].json.encodedBase64String = encodedBase64;\n\nreturn items; // Retorna os itens modificados"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[440,0],"id":"07e15182-25e3-47b8-b0f5-1bb3cb472882","name":"Code"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"When Executed by Another Workflow":[{"json":{"dataentrada":"21082025","datasaida":"23082025"}}]},"versionId":"0b51bbda-21dc-49cc-90c4-a5e6ce023c4a","triggerCount":0,"tags":[]}
