{"createdAt":"2025-07-21T23:19:11.994Z","updatedAt":"2025-07-22T00:18:14.381Z","id":"i15bd6i5wW7iLEsX","name":"Controle CPFL","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,0],"id":"da000a03-74a2-4d97-82f0-2702a0b616ec","name":"When clicking ‘Execute workflow’"},{"parameters":{"documentId":{"__rl":true,"value":"1ZYdQ3pZyeRrm-3_yNzu_W0oS3kKknbCN6YF51Qe1TKs","mode":"id"},"sheetName":{"__rl":true,"value":2025442524,"mode":"list","cachedResultName":"2025","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1ZYdQ3pZyeRrm-3_yNzu_W0oS3kKknbCN6YF51Qe1TKs/edit#gid=2025442524"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[220,0],"id":"77764e00-fe9b-4f25-8f0c-63eb62d1d7d2","name":"Planilha principal","credentials":{"googleSheetsOAuth2Api":{"id":"YxFVSmLd56W59dsS","name":"Google Sheets Wanderson"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1ZYdQ3pZyeRrm-3_yNzu_W0oS3kKknbCN6YF51Qe1TKs","mode":"id"},"sheetName":{"__rl":true,"value":1458329187,"mode":"list","cachedResultName":"Dados_para_grafico","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1ZYdQ3pZyeRrm-3_yNzu_W0oS3kKknbCN6YF51Qe1TKs/edit#gid=1458329187"},"columns":{"mappingMode":"defineBelow","value":{"Data":"={{ $json.Data }}","Consumo_kWh_Diario":"={{ $json.Consumo_kWh_Diario }}","Valor_R$_Diario":"={{ $json.Valor_R$_Diario }}","Consumo_kWh_Mensal":"={{ $json.Consumo_kWh_Mensal }}","Valor_R$_Mensal":"={{ $json.Valor_R$_Mensal }}","MesAnoReferencia":"={{ $json.MesAnoReferencia }}","NumeroInstalacao":"={{ $json.NumeroInstalacao }}","BandeiraTarifaria":"={{ $json.BandeiraTarifaria }}"},"matchingColumns":[],"schema":[{"id":"Data","displayName":"Data","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Consumo_kWh_Diario","displayName":"Consumo_kWh_Diario","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Valor_R$_Diario","displayName":"Valor_R$_Diario","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Consumo_kWh_Mensal","displayName":"Consumo_kWh_Mensal","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Valor_R$_Mensal","displayName":"Valor_R$_Mensal","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"MesAnoReferencia","displayName":"MesAnoReferencia","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"NumeroInstalacao","displayName":"NumeroInstalacao","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"BandeiraTarifaria","displayName":"BandeiraTarifaria","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[660,0],"id":"02146d24-9912-430c-bd7e-89d0b2dc3163","name":"Dados para Grafico","credentials":{"googleSheetsOAuth2Api":{"id":"YxFVSmLd56W59dsS","name":"Google Sheets Wanderson"}}},{"parameters":{"jsCode":"const output = [];\n\nconsole.log(\"Início do nó Code. Total de itens recebidos:\", $input.all().length);\n\nfor (const item of $input.all()) {\n    console.log(\"Processando item:\", item.json);\n\n    const startDateStr = item.json['Data Início Período'];\n    const endDateStr = item.json['Data Fim Período'];\n    const totalConsumption = parseFloat(item.json.Consumo_kWh);\n    const totalValue = parseFloat(item.json['Valor_R$']);\n    const instalacao = item.json['Número da Instalação'];\n    const mesAnoReferencia = item.json['Mês/Ano Referência'];\n    const bandeiraTarifaria = item.json['Bandeira Tarifária'];\n\n    console.log(\"Valores extraídos:\", {\n        startDateStr,\n        endDateStr,\n        totalConsumption,\n        totalValue,\n        instalacao\n    });\n\n    const startDate = new Date(startDateStr);\n    const endDate = new Date(endDateStr);\n\n    console.log(\"Datas convertidas:\", { startDate, endDate });\n\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    console.log(\"Diferença de dias:\", diffDays);\n\n    // Declara dailyConsumption e dailyValue aqui, para que estejam disponíveis\n    let dailyConsumption = NaN; // Inicializa com NaN por segurança\n    let dailyValue = NaN;       // Inicializa com NaN por segurança\n\n    // Calcula dailyConsumption e dailyValue SOMENTE se diffDays > 0\n    if (diffDays > 0) {\n        dailyConsumption = totalConsumption / diffDays;\n        dailyValue = totalValue / diffDays;\n    }\n\n    // Agora, a condição verifica se as bases para o cálculo são válidas\n    if (diffDays > 0 && !isNaN(totalConsumption) && !isNaN(dailyConsumption) && !isNaN(dailyValue)) {\n        console.log(\"Consumo diário calculado:\", dailyConsumption);\n\n        for (let i = 0; i <= diffDays; i++) {\n            const currentDate = new Date(startDate);\n            currentDate.setDate(startDate.getDate() + i);\n\n            output.push({\n                Data: currentDate.toISOString().split('T')[0],\n                Consumo_kWh_Diario: dailyConsumption,\n                Valor_R$_Diario: dailyValue,\n                Consumo_kWh_Mensal: totalConsumption,\n                Valor_R$_Mensal: totalValue,\n                MesAnoReferencia: mesAnoReferencia,\n                NumeroInstalacao: instalacao,\n                BandeiraTarifaria: bandeiraTarifaria\n            });\n        }\n    } else {\n        console.log(\"Item ignorado devido a dados inválidos ou diffDays <= 0 para:\", item.json);\n        if (isNaN(totalConsumption)) console.log(\"totalConsumption é NaN\");\n        if (isNaN(diffDays)) console.log(\"diffDays é NaN\");\n        if (isNaN(dailyConsumption)) console.log(\"dailyConsumption é NaN (após cálculo)\");\n        if (isNaN(dailyValue)) console.log(\"dailyValue é NaN (após cálculo)\");\n    }\n}\n\nconsole.log(\"Fim do nó Code. Total de itens na saída (output):\", output.length);\n\nreturn output.map(item => ({ json: item }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[440,0],"id":"3a578a76-528a-4900-80fe-ce2f3d0417d5","name":"Variaveis","alwaysOutputData":true}],"connections":{"When clicking ‘Execute workflow’":{"main":[[{"node":"Planilha principal","type":"main","index":0}]]},"Planilha principal":{"main":[[{"node":"Variaveis","type":"main","index":0}]]},"Variaveis":{"main":[[{"node":"Dados para Grafico","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"19452563-b6eb-405b-8b8f-e4ec9e97d540","triggerCount":0,"tags":[]}
